{"version":3,"sources":["assets/src/img/auth.png","management/actions/types.js","management/actions/auth.js","components/Navbar.js","hocs/Layout.js","containers/Home.js","containers/Login.js","containers/Register.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","management/reducers/auth.js","management/reducers/index.js","management/store.js","App.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_SUCCESS","REGISTER_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOGOUT","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","GOOGLE_AUTH_SUCCESS","GOOGLE_AUTH_FAIL","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","auth","logout","useState","redirect","className","role","aria-label","to","src","logo","alt","width","height","aria-expanded","data-target","aria-hidden","id","href","onClick","checkAuthenticated","body","JSON","stringify","token","post","code","googleOauth","details","formBody","Object","keys","map","key","encodeURIComponent","join","props","location","useLocation","useEffect","values","queryString","parse","search","console","log","children","Home","style","textDecoration","login","email","password","formData","setFormData","onChange","e","target","name","value","googleLogin","window","replace","authorization_url","onSubmit","preventDefault","placeholder","required","minLength","class","lineHeight","register","username","first_name","last_name","re_password","accountCreated","setAccountCreated","activate","uid","match","activates","setActivates","params","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","re_new_passwod","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Login","Register","Activate","ResetPassword","ResetPasswordConfirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f69c2316.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/auth.0b14e127.png\";","// USER LOGIN TYPES\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\n\n// User Register\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\n\n// USER ACTIVATION\nexport const ACTIVATION_SUCCESS = 'ACTIVATIOM_SUCCESS'\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL'\n\n// GET USER\nexport const USER_LOADED = 'USER_LOADED'\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL'\n// IS USER AUTHENTICATED TYPES\n\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS'\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL'\n\n// USER LOGOUT\nexport const LOGOUT = 'LOGOUT'\n\n// PASSWORD RESET TYPES\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS'\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL'\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS'\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL'\n\n// GOOGLE LOGIN\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS'\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL'","import axios from 'axios'\nimport {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED,\n    USER_LOADED_FAIL,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n    LOGOUT\n} from './types'\n\n// GET USER\nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config)\n\n            dispatch({\n                type: USER_LOADED,\n                payload: res.data\n            })\n        } catch (err) {\n            dispatch({\n                type: USER_LOADED_FAIL\n            })\n        }\n    } else {\n        dispatch({\n            type: USER_LOADED_FAIL\n        })\n    }\n}\n\nexport const googleOauth = (state, code) => async dispatch => {\n    if (state && code && !localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/x-www.form-urlencoded'\n            }\n        }\n        const details = {\n            'state': state,\n            'code': code\n        }\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&')\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?${formBody}`, config)\n            dispatch({\n                type: GOOGLE_AUTH_SUCCESS,\n                payload: res.data\n            })\n            dispatch(load_user())\n        } catch (err) {\n            dispatch({\n                type: GOOGLE_AUTH_FAIL\n            })\n        }\n    }\n}\n\n// CHECK USER IS AUTHENTICATED\nexport const checkAuthenticated = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        };\n\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\n\n            if (res.data.code !== 'token_not_valid') {\n                dispatch({\n                    type: AUTHENTICATED_SUCCESS\n                });\n            } else {\n                dispatch({\n                    type: AUTHENTICATED_FAIL\n                });\n            }\n        } catch (err) {\n            dispatch({\n                type: AUTHENTICATED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: AUTHENTICATED_FAIL\n        });\n    }\n}\n\n\n// USER LOGIN\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ email, password })\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        })\n        dispatch(load_user())\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL,\n\n        })\n    }\n\n}\n\n// USER REGISTER\nexport const register = (email, username, first_name, last_name, password, re_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ email, username, first_name, last_name, password, re_password })\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config)\n\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type: REGISTER_FAIL,\n\n        })\n    }\n\n}\n\n// USER ACTIVATION\nexport const activate = (uid, token) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ uid, token })\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config)\n\n        dispatch({\n            type: ACTIVATION_SUCCESS\n        })\n    } catch (err) {\n        dispatch({\n            type: ACTIVATION_FAIL\n        })\n    }\n}\n\n// PASSWORD RESET\nexport const reset_password = (email) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n\n        }\n    }\n\n    const body = JSON.stringify({ email })\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config)\n        dispatch({\n            type: PASSWORD_RESET_SUCCESS\n        })\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_FAIL\n        })\n    }\n}\n\n// \nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config)\n\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\n        })\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_FAIL\n        })\n    }\n}\n\n// LOGOUT\nexport const logout = () => dispatch => {\n    dispatch({\n        type: LOGOUT\n    })\n}","import React, { Fragment, useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport logo from \"../assets/src/img/auth.png\"\n\nimport { connect } from 'react-redux'\nimport { logout } from \"../management/actions/auth\"\n\nconst Navbar = ({ logout, isAuthenticated }) => {\n\n  const [redirect, setRedirect] = useState(false)\n\n  const logout_user = () => {\n    logout();\n    setRedirect(true)\n\n  }\n\n  const guestLink = () => (\n    <Fragment>\n      <div className=\"buttons\">\n        <Link to=\"/register\" className=\"button is-primary\">\n          <strong>Sign up</strong>\n        </Link>\n        <Link to=\"/login\" className=\"button is-light\">\n          Log in\n                </Link>\n      </div>\n    </Fragment>\n  )\n\n  const authLink = () => (\n    <Link href=\"#!\" className=\"button is-light\" onClick={logout}>\n      Logout\n    </Link>\n  )\n  \n  return (\n    <Fragment>\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-brand\">\n        <Link className=\"navbar-item\" to=\"/\">\n          <img src={logo} alt=\"logo\" width=\"112\" height=\"100\" />\n        </Link>\n\n        <Link to=\"/\" role=\"button\" className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </Link>\n      </div>\n\n      <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n        <div className=\"navbar-start\">\n          <Link to=\"/\" className=\"navbar-item\">\n            Home\n            </Link>\n\n          <Link to=\"#\" className=\"navbar-item\">\n            Documentation\n            </Link>\n\n          <div className=\"navbar-item has-dropdown is-hoverable\">\n            <Link to=\"#\" className=\"navbar-link\">\n              More\n              </Link>\n\n            <div className=\"navbar-dropdown\">\n              <Link to=\"/\" className=\"navbar-item\">\n                About\n                </Link>\n              <Link to=\"#\" className=\"navbar-item\">\n                Jobs\n                </Link>\n              <Link to=\"#\" className=\"navbar-item\">\n                Contact\n                </Link>\n              <hr className=\"navbar-divider\" />\n              <Link to=\"#\" className=\"navbar-item\">\n                Report an issue\n                </Link>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            {/* fragments */}\n            {isAuthenticated ? authLink(): guestLink()}\n          </div>\n        </div>\n      </div>\n    </nav>\n    {redirect ? <Redirect to=\"/\" /> : <Fragment />}\n    </Fragment>\n  )\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { logout })(Navbar)\n","import React, { useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport Navbar from \"../components/Navbar\"\n\nimport queryString from 'query-string'\nimport { connect } from 'react-redux'\nimport { checkAuthenticated, load_user, googleOauth } from '../management/actions/auth'\n\nconst Layout = (props) => {\n  let location = useLocation()\n\n  useEffect(() => {\n    const values = queryString.parse(location.search);\n    const state = values.state ? values.state : null;\n    const code = values.code ? values.code : null;\n\n    console.log('State:' + state)\n    console.log('Code:' + code)\n\n    if (state && code) {\n      props.googleOauth(state, code)\n    } else {\n      props.checkAuthenticated();\n      props.load_user();\n    }\n\n\n  }, [location])\n  return (\n    <>\n      <Navbar />\n      <section className=\"section\">\n\n        {props.children}\n      </section>\n    </>\n\n  )\n}\n\nexport default connect(null, { checkAuthenticated, load_user, googleOauth })(Layout);","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n\nconst Home = () => (\n\n  <section className=\"hero is-medium is-primary is-bold\">\n    <div className=\"hero-body\">\n      <div className=\"container\">\n        <h1 className=\"title\">\n          Welcome To <strong>\"DJ-AUTH\"</strong>\n        </h1>\n        <h2 className=\"subtitle\">\n          Auth Sys\n        </h2>\n        <hr className=\"divider\" />\n        <h2 className=\"subtitle\">\n          Click to login\n        </h2>\n        <Link to=\"/login\" className=\"button is-medium\" style={{ textDecoration: \"none\" }}>Sign-In</Link>\n      </div>\n    </div>\n  </section>\n\n)\n\nexport default Home\n","import React, { useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { login } from \"../management/actions/auth\"\nimport axios from 'axios'\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    })\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    })\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        login(email, password)\n    }\n\n    const googleLogin = async () => {\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=http://localhost:8000`)\n\n            window.location.replace(res.data.authorization_url);\n\n        } catch (err) {\n\n        }\n    }\n\n    if (isAuthenticated) {\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <form className=\"box\" onSubmit={onSubmit}>\n            <h1 className=\"title\">Sign In</h1>\n            <p className=\"subtitle\">Sign In to your account</p>\n            <hr className=\"divider\" />\n\n            <div className=\"field\">\n                <label className=\"label\">Email</label>\n                <div className=\"control has-icons-left has-icons-right\">\n                    <input className=\"input is-success\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-envelope\"></i>\n                    </span>\n                </div>\n            </div>\n\n            <div className=\"field\">\n                <label className=\"label\">Password</label>\n                <div className=\"control has-icons-left has-icons-right\">\n                    <input\n                        className=\"input is-success\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-lock\"></i>\n                    </span>\n                </div>\n            </div>\n\n\n            <div className=\"field-body\">\n                <div className=\"field\">\n                    <div className=\"control\">\n                        <button className=\"button is-primary\" type=\"submit\">\n                            Sign In\n                            </button>\n                        <hr className=\"divider\" />\n                        <button class=\"button is-danger\" onClick={googleLogin} >\n                            <span class=\"icon\">\n                                <i class=\"fab fa-google\"></i>\n                            </span>\n                            <span>Continue with Google</span>\n                        </button>\n                        &nbsp;  &nbsp;\n                        <button class=\"button is-info\" >\n                            <span class=\"icon\">\n                                <i class=\"fab fa-facebook\"></i>\n                            </span>\n                            <span>Continue with Facebook</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <p className=\"subtitle mt-1\" >New here? <Link to=\"/register\">Signup</Link></p>\n            <p className=\"subtitle\" style={{ lineHeight: \"0.1px\" }}>Forgot password? <Link to=\"/reset-password\">Reset</Link></p>\n\n        </form>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { login })(Login)\n","import React, { useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { register } from \"../management/actions/auth\"\nimport axios from \"axios\"\n\nconst Register = ({ register, isAuthenticated }) => {\n    const [accountCreated, setAccountCreated] = useState(false)\n    const [formData, setFormData] = useState({\n        email: '',\n        username: '',\n        first_name:'',\n        last_name:'',\n        password: '',\n        re_password: ''\n    })\n\n    const { email, username, first_name, last_name,  password, re_password } = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    })\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (password === re_password) {\n            register(email, username, first_name, last_name,  password, re_password)\n            setAccountCreated(true)\n        }\n    }\n\n    const googleLogin = async () => {\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=http://localhost:8000`)\n\n            window.location.replace(res.data.authorization_url);\n\n        } catch (err) {\n\n        }\n    }\n\n\n    if (isAuthenticated) {\n        return <Redirect to=\"/\" />\n    }\n    if (accountCreated) {\n        return <Redirect to=\"/login\" />\n    }\n\n    return (\n        <form className=\"box\" onSubmit={onSubmit}>\n            <h1 className=\"title\">Sign Up</h1>\n            <p className=\"subtitle\">Create a new account here.</p>\n            <hr className=\"divider\" />\n\n            <div className=\"field\">\n                <label className=\"label\">Email</label>\n                <div className=\"control has-icons-left has-icons-right\">\n                    <input className=\"input is-success\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-envelope\"></i>\n                    </span>\n                </div>\n            </div>\n\n            <div className=\"field\">\n                <label className=\"label\">Username</label>\n                <div className=\"control has-icons-left has-icons-right\">\n                    <input className=\"input is-success\"\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        name='username'\n                        value={username}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-envelope\"></i>\n                    </span>\n                </div>\n            </div>\n\n            <div className=\"field\">\n                <label className=\"label\">First Name</label>\n                <div className=\"control has-icons-left has-icons-right\">\n                    <input className=\"input is-success\"\n                        type=\"text\"\n                        placeholder=\"First Name\"\n                        name='first_name'\n                        value={first_name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-envelope\"></i>\n                    </span>\n                </div>\n            </div>\n\n            <div className=\"field\">\n                <label className=\"label\">Last Name</label>\n                <div className=\"control has-icons-left has-icons-right\">\n                    <input className=\"input is-success\"\n                        type=\"text\"\n                        placeholder=\"Last Name\"\n                        name='last_name'\n                        value={last_name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-envelope\"></i>\n                    </span>\n                </div>\n            </div>\n\n\n\n            <div className=\"field\">\n                <label className=\"label\">Password</label>\n                <div className=\"control has-icons-left has-icons-right\">\n                    <input\n                        className=\"input is-success\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-lock\"></i>\n                    </span>\n                </div>\n            </div>\n\n            <div className=\"field\">\n                <label className=\"label\">Confirm Password</label>\n                <div className=\"control has-icons-left has-icons-right\">\n                    <input\n                        className=\"input is-success\"\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name='re_password'\n                        value={re_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-lock\"></i>\n                    </span>\n                </div>\n            </div>\n\n\n            <div className=\"field-body\">\n                <div className=\"field\">\n                    <div className=\"control\">\n                        <button className=\"button is-primary\" type=\"submit\">\n                            Sign In\n                            </button>\n                        <br />\n                        <button class=\"button is-danger mt-3\" onClick={googleLogin} >\n                            <span class=\"icon\">\n                                <i class=\"fab fa-google\"></i>\n                            </span>\n                            <span>Continue with Google</span>\n                        </button>\n                        &nbsp;  &nbsp;\n                        <button class=\"button is-info  mt-3\" >\n                            <span class=\"icon\">\n                                <i class=\"fab fa-facebook\"></i>\n                            </span>\n                            <span>Continue with Facebook</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <p className=\"subtitle mt-1\" >Got Account? <Link to=\"/login\">Sign In</Link></p>\n\n        </form>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { register })(Register)\n","import React, { useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { activate } from \"../management/actions/auth\"\n\nconst Activate = ({ match, activate }) => {\n    \n    const [activates, setActivates] = useState(false)\n    const verify = e => {\n        const uid = match.params.uid\n        const token = match.params.token\n\n        activate(uid, token)\n        setActivates(true)\n    }\n\n    if (activates){\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <div className=\"box\">\n            <h1 className=\"title\"> Activate Your Account</h1>\n            <button onClick={verify} type=\"submit\" className=\"button\">Activate</button>\n        </div>\n    )\n}\n\n// const mapStateToProps = state =>({\n//  isAuthenticated: state.auth.isAuthenticated\n// })\n\nexport default connect(null, { activate })(Activate)\n","import React, { useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { reset_password } from \"../management/actions/auth\"\n\nconst ResetPassword = ({ reset_password }) => {\n    const [requestSent, setRequestSent] = useState(false)\n    const [formData, setFormData] = useState({\n        email: '',\n    })\n\n    const { email } = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    })\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        reset_password(email)\n        setRequestSent(true)\n    }\n\n    if (requestSent){\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <form className=\"box\" onSubmit={onSubmit}>\n            <h1 className=\"title\">Reset Password</h1>\n            <p className=\"subtitle\">Reset your password</p>\n            <hr className=\"divider\" />\n\n            <div className=\"field\">\n                <label className=\"label\">Email</label>\n                <div className=\"control has-icons-left has-icons-right\">\n                    <input className=\"input is-success\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-envelope\"></i>\n                    </span>\n                </div>\n            </div>\n\n            <div className=\"field-body\">\n                <div className=\"field\">\n                    <div className=\"control\">\n                        <button className=\"button is-primary\" type=\"submit\">\n                            Reset Password\n                            </button>\n                    </div>\n                </div>\n            </div>\n            \n        </form>\n    )\n}\n\n\n\nexport default connect(null, {reset_password})(ResetPassword)\n","import React, { useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { reset_password_confirm } from \"../management/actions/auth\"\n\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\n    const [requestSent, setRequestSent] = useState(false)\n    const [formData, setFormData] = useState({\n        new_password: '',\n        re_new_passwod: ''\n    })\n\n    const {  new_password, re_new_passwod } = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    })\n\n    const onSubmit = e => {\n        e.preventDefault();\n        const uid = match.params.uid\n        const token = match.params.token\n        reset_password_confirm(uid, token, new_password, re_new_passwod)\n        setRequestSent(true)\n    }\n\n    if (requestSent){\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <form className=\"box\" onSubmit={onSubmit}>\n            <h1 className=\"title\">Reset Password</h1>\n            <p className=\"subtitle\">Reset your password</p>\n            <hr className=\"divider\" />\n\n            <div className=\"field\">\n                <label className=\"label\">New Password</label>\n                <div className=\"control has-icons-left has-icons-right\">\n                    <input\n                        className=\"input is-success\"\n                        type=\"password\"\n                        placeholder=\"New Password\"\n                        name='new_password'\n                        value={new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-lock\"></i>\n                    </span>\n                </div>\n            </div>\n\n            <div className=\"field\">\n                <label className=\"label\">Confirm New Password</label>\n                <div className=\"control has-icons-left has-icons-right\">\n                    <input\n                        className=\"input is-success\"\n                        type=\"password\"\n                        placeholder=\"Confirm New-Passwod\"\n                        name='re_new_passwod'\n                        value={re_new_passwod}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-lock\"></i>\n                    </span>\n                </div>\n            </div>\n\n            <div className=\"field-body\">\n                <div className=\"field\">\n                    <div className=\"control\">\n                        <button className=\"button is-primary\" type=\"submit\">\n                            Reset Password\n                            </button>\n                    </div>\n                </div>\n            </div>\n            \n        </form>\n    )\n}\n\n\n\nexport default connect(null, {reset_password_confirm})(ResetPasswordConfirm)\n","import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED,\n    USER_LOADED_FAIL,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n    LOGOUT\n} from '../actions/types'\n\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null\n}\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('access', payload.access)\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n        case REGISTER_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED:\n            return {\n                ...state,\n                user: payload\n            }\n        case AUTHENTICATED_FAIL:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case LOGIN_FAIL:\n        case REGISTER_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('access')\n            localStorage.removeItem('refresh')\n            return {\n                ...state,\n                isAuthenticated: false,\n                access: null,\n                refresh: null,\n                user: null\n            }\n        case GOOGLE_AUTH_SUCCESS:\n            localStorage.setItem('access', payload.access)\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n            \n        case GOOGLE_AUTH_FAIL:\n        case PASSWORD_RESET_SUCCESS:\n        case PASSWORD_RESET_FAIL:\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n        case PASSWORD_RESET_CONFIRM_FAIL:\n        case ACTIVATION_SUCCESS:\n        case ACTIVATION_FAIL:\n            return {\n                ...state\n            }\n\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux'\nimport auth from \"./auth\"\n\nexport default combineReducers({\n    auth\n})","import {createStore, applyMiddleware} from \"redux\"\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Layout from \"./hocs/Layout\"\n\nimport Home from \"./containers/Home\"\nimport Login from \"./containers/Login\"\nimport Register from \"./containers/Register\"\nimport Activate from \"./containers/Activate\"\nimport ResetPassword from \"./containers/ResetPassword\"\nimport ResetPasswordConfirm from \"./containers/ResetPasswordConfirm\"\n\nimport { Provider } from 'react-redux'\nimport store from \"./management/store\"\n\n\nconst App = () => (\n    <Provider store={store}>\n        <Router>\n            <Layout>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <Route exact path=\"/activate/:uid/:token\" component={Activate} />\n                    <Route exact path=\"/reset-password\" component={ResetPassword} />\n                    <Route exact path=\"/email/reset/confirm/:uid/:token\" component={ResetPasswordConfirm} />\n                </Switch>\n            </Layout>\n        </Router>\n    </Provider>\n\n\n)\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}